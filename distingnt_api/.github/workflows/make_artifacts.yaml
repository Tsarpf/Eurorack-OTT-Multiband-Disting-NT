name: Make Plug-ins Archive

on:
  push:
    tags:
      - "v*" # Runs action on pushed tags starting with 'v'

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies via Homebrew
        run: |
          brew update
          brew install faust
          brew install --cask gcc-arm-embedded

      - name: Verify installation
        run: |
          arm-none-eabi-g++ --version
          faust --version

      - name: Run make in directories
        run: |
          DIRECTORIES=("examples" "faust/examples" "airwindows/src")  # Replace with your actual directories
          for DIR in "${DIRECTORIES[@]}"; do
            echo "Building in $DIR"
            (cd "$DIR" && make clean && make)
          done

      - name: Prepare directory structure for zip
        run: |
          mkdir -p release/programs/plug-ins
          DIRECTORIES=("examples" "faust/examples")  # Use your actual directories here
          for DIR in "${DIRECTORIES[@]}"; do
            find "$DIR" -type f -name "*.o" -exec cp {} release/programs/plug-ins/ \;
          done

      - name: Zip plug-in artifacts
        run: |
          cd release
          zip -r ../plug-ins.zip programs
          cd ..

      - name: Prepare directory structure for airwindows zip
        run: |
          mkdir -p release/airwindows/programs/plug-ins/airwindows
          DIRECTORIES=("airwindows")
          for DIR in "${DIRECTORIES[@]}"; do
            find "$DIR" -type f -name "*.o" -exec cp {} release/airwindows/programs/plug-ins/airwindows/ \;
          done

      - name: Zip airwindows artifacts
        run: |
          cd release/airwindows
          zip -r ../../airwindows-plugins.zip programs
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            plug-ins.zip
            airwindows-plugins.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
